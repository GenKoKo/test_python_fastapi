# Docker Compose 生產環境配置

version: '3.8'

services:
  # FastAPI 生產服務
  fastapi-prod:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: fastapi-production
    ports:
      - "80:8000"
    environment:
      - DEBUG=false
      - LOG_LEVEL=INFO
      - HOST=0.0.0.0
      - PORT=8000
      - WORKERS=4
    env_file:
      - .env.production
    networks:
      - production-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/stats/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Nginx 反向代理
  nginx:
    image: nginx:alpine
    container_name: fastapi-nginx
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - fastapi-prod
    networks:
      - production-network
    restart: unless-stopped

  # Redis 緩存 (可選)
  redis:
    image: redis:alpine
    container_name: fastapi-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - production-network
    restart: unless-stopped
    command: redis-server --appendonly yes

networks:
  production-network:
    driver: bridge

volumes:
  redis-data: